//- Input Elements
//- Try to use inputs through mixins as much as possible
//- This allows for preserving the bootstrap styles, as well as modifying 
//- all inputs across the theme in a unified manner

mixin Input(type, placeholder)
	- var _type = !!type ? type : 'text'
	- var _hldr = !!placeholder ? placeholder : 'Enter text'
	input.form-control(type='#{_type}', placeholder='#{_hldr}')&attributes(attributes)= name

mixin Checkbox(checked)
	- var _s = !!checked ? checked : false
	input.form-control(type='checkbox', checked='#{checked}')&attributes(attributes)= name

mixin Radiobox(checked)
	- var _s = !!checked ? checked : false
	input.form-control(type='radio', checked='#{checked}')&attributes(attributes)= name


mixin Textarea(placeholder, text)
	- var _hldr = !!placeholder ? placeholder : 'Enter Text Here'
	if !text
		textarea.form-control(placeholder='#{_hldr}')&attributes(attributes)= name
	else
		textarea.form-control(placeholder='#{_hldr}')&attributes(attributes)= name
			| #{text}


mixin Field(label, icon)
	.input-field
		.floating-label&attributes(attributes)
			if block
				block
		
			if !icon
				span.f-label #{label}
			else
				span.f-label
					+Icon_With_Text(icon, label)


//- Shorthands for input groups with only icons and an input
mixin InputGroup(iconclass, type, placeholder, value)
	.input-group&attributes(attributes)
		.input-group-addon
			+Icon(iconclass)
		+Input(type, placeholder)(value='#{value}')


mixin Floating-Label-Input(options)
	.input-field
		.floating-label&attributes(attributes)= name
			| #{options['label']}

		if block
			block